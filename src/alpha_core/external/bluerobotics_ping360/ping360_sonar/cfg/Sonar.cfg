#!/usr/bin/env python
PACKAGE = "ping360_sonar"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Note: Sonar gain (0 = low, 1 = normal, 2 = high)
# Default: 0
gain_enum = gen.enum([ gen.const("Low",    int_t, 0, "Sonar gain low"),
                       gen.const("Normal", int_t, 1, "Sonar gain normal"),
                       gen.const("high",   int_t, 2, "Sonar gain high")],
                      "sonar gain setting")
gen.add("gain", int_t, 0, "Sonar gain with low, normal, high", 0, 0, 2, edit_method=gain_enum)

# Note: Sonar operating frequency [kHz], from 650 to 850
# Default: 740
gen.add("frequency", int_t, 0, "Sonar operating frequency [kHz]", 740,  650, 850)

# Note: Sonar max range [m], from 1 to 50
# Default: 2
gen.add("range", int_t, 0, "Sonar max range [m]", 2,  1, 50)

# Note: Scanned angular sector around sonar heading [degrees], from 60 to 360. Will oscillate if not 360.
# Default: 360
gen.add("angle_sector", int_t, 0, "Scanned angular sector around sonar heading [degrees]", 360,  60, 360)

# Note: Sonar angular resolution [degrees], from 1 to 20.
# Default: 1
gen.add("angle_step", int_t, 0, "Sonar angular resolution [degrees]", 1,  1, 20)

# Note: Speed of sound [m/s], from 1450 to 1550
# Default: 1500
gen.add("speed_of_sound", int_t, 0, "Speed of sound [m/s]", 1500,  1450, 1550)

exit(gen.generate(PACKAGE, "ping360_sonar", "Sonar"))